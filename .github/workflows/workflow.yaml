name: Workflow
on:
  push:
    branches:
      - feature/dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  MONGO_URI: ${{ secrets.MONGO_URI }}
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  unit-test:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        id: unit-test
        run: npm test

      - name: Upload test results
        if: steps.unit-test.outcome == 'failure' || steps.unit-test.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: ./test-results.xml

  Code-Coverage:
    runs-on: self-hosted
    needs: [unit-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run code coverage
        id: code-coverage
        run: npm run coverage

      - name: Upload code coverage results
        if: steps.code-coverage.outcome == 'failure' || steps.code-coverage.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-results
          path: ./coverage/lcov.info

  Scan-Secrets-with-Gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    needs: [Code-Coverage]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-docker-image:
    runs-on: self-hosted
    needs: [Scan-Secrets-with-Gitleaks]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: msoliman427/solar-system
          tags: |
            type=raw,value=latest
            type=sha
            type=branch,ref=feature/dev
            type=branch,ref=main
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            MONGO_URI=${{ secrets.MONGO_URI }}
            MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}
            MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}
